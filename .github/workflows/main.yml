name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  REGISTRY: "haraldka"
  IMAGE_NAME: "yosukebot"
  CONTAINER_NAME: "bot"
  LOGS_PATH: "/root/bot/api/logs/prod"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Set up Go 1.17.3
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.3

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: go test ./...

  build_and_push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: test

    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t haraldka/yosukebot:$(echo $GITHUB_SHA | head -c7) .

     -  name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD}} "7:4[3jN~_&h%yK^"

      - name: Push image to Docker Hub
        run: docker push haraldka/yosukebot:$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: build_and_push

    steps:
      - name: Deploy to Lambda via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          port: ${{ secrets.PORT }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,LOGS_PATH,CONTAINER_NAME
          script: |
            # Set env variables
            # export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            # export ACCESS_KEY=${{ secrets.ACCESS_KEY }}
            # export SECRET_KEY=${{ secrets.SECRET_KEY }}

            # Stop running container
            docker stop $(echo $CONTAINER_NAME)

            # Remove old container
            docker rm $(echo $CONTAINER_NAME)

            # Run a new container from a new image
            docker run --env $(echo ${{ secrets.TOKEN }}) \
            --restart always \
            --publish 8000:8000 \
            --name $(echo $CONTAINER_NAME) \
            haraldka/yosukebot:$(echo $GITHUB_SHA | head -c7)